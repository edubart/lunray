global Window = @record {
  window: *SDL_Window,
  renderer: *SDL_Renderer,
  texture: *SDL_Texture,
  width: integer,
  height: integer,
  pitch: cint
}

function Window.create(width: integer, height: integer): Window
  SDL_SetHint('SDL_FRAMEBUFFER_ACCELERATION', '0')
  SDL_Init(SDL_INIT_VIDEO)

  local window = SDL_CreateWindow("An SDL2 Window",
    SDL_WINDOWPOS_UNDEFINED, SDL_WINDOWPOS_UNDEFINED,
    width, height, SDL_WINDOW_OPENGL)
  assert(window, "Could not create window")

  local renderer = SDL_CreateRenderer(window, -1, SDL_RENDERER_SOFTWARE)
  assert(renderer, "Could not create renderer")
  SDL_SetRenderDrawBlendMode(renderer, SDL_BLENDMODE_NONE)

  local texture = SDL_CreateTexture(renderer, SDL_PIXELFORMAT_ARGB8888, SDL_TEXTUREACCESS_STREAMING, width, height)
  SDL_SetTextureBlendMode(texture, SDL_BLENDMODE_NONE)

  return Window{window, renderer, texture, width, height, width*4}
end

function Window.destroy(self: *Window)
  SDL_DestroyTexture(self.texture)
  SDL_DestroyRenderer(self.renderer)
  SDL_DestroyWindow(self.window)
  SDL_Quit()
end

function Window.uploadpixels(self: *Window, pixels: *argbcolor)
  SDL_UpdateTexture(self.texture, nilptr, pixels, self.pitch)
  SDL_RenderCopy(self.renderer, self.texture, nilptr, nilptr)
  SDL_RenderPresent(self.renderer)
end
